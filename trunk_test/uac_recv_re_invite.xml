<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">
<scenario name = "uac_recv_re_invite">

<Global variables="CDPNDOM,CGPNDOM,CDPN,CGPN" />
<User variables="cdpn_dom,cgpn_dom,cdpn,sdp_chk,cgpn,first_ss_vrs,first_ss_id" />
<Reference variables="sdp_chk,first_ss_vrs,first_ss_id"/>

<nop hide="true">
    <action>
        <assignstr assign_to="local_tag" value="[call_number][pid]"/>
        <assignstr assign_to="cgpn_dom" value="[$CGPNDOM]"/>
        <assignstr assign_to="cdpn_dom" value="[$CDPNDOM]"/>
        <assignstr assign_to="cdpn" value="[$CDPN]"/>
        <assignstr assign_to="cgpn" value="[$CGPN]"/>
    </action>
</nop>

<send>
<![CDATA[
    INVITE sip:[$cdpn]@[remote_ip]:[remote_port] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    From: "UAC receive re-INVITE (resync media test)" <sip:[$cgpn]@[$cgpn_dom]>;tag=[$local_tag]
    To: <sip:[$cdpn]@[$cdpn_dom]>
    Call-ID: [call_id]
    CSeq: [cseq] INVITE
    Contact: <sip:[$cgpn]@[local_ip]:[local_port]>
    Max-Forwards: 70
    Content-Type: application/sdp
    Content-Length: [len]
    
    v=0
    o=tester 123456 654321 IN IP[local_ip_type] [local_ip]
    s=A conversation
    c=IN IP[local_ip_type] [local_ip]
    t=0 0
    m=audio [auto_media_port] RTP/AVP 8
    a=rtpmap:8 PCMA/8000
]]>
</send>

<recv response="100" optional="true"></recv>

<recv response="401" auth="true" optional="true" next="send_inv_with_auth">
    <action>
        <ereg regexp="(\w|-)*" search_in="hdr" header="branch=" assign_to="last_branch" />
    </action>
 </recv>

<label id="recv_100"/>

<recv response="100" optional="true"></recv>
<recv response="183" optional="true"></recv>
<recv response="180">
    <action>
        <ereg regexp=".*" check_it="true" search_in="body" assign_to="180_sdp"/>
    </action>
</recv>
<recv response="200" auth="true">
    <action>
        <ereg regexp=".*" check_it="true" search_in="body" assign_to="200_sdp"/>
        <ereg regexp="[0-9]+" search_in="hdr" header="CSeq:" assign_to="last_cseq" />
        <ereg regexp="sip:([^@]+)?@?([^:;>]+)(:[^;>]+)?([^>]+)?" search_in="hdr" header="Contact:" check_it="true" assign_to="contact,dummy,ip,dummy,dummy"/>
        <ereg regexp="o=([^ ]+)\s([^ ]+)\s([^ ]+)" check_it="true" search_in="body" assign_to="dummy,dummy,first_ss_id,first_ss_vrs"/>
        <todouble assign_to="first_ss_vrs" variable="first_ss_vrs"/>
        <todouble assign_to="first_ss_id" variable="first_ss_id"/>
    </action>
</recv>


<nop hide="true">
    <action>
        <setdest host="[$ip]" port="[remote_port]" protocol="UDP" />
    </action>
</nop>

<send>
<![CDATA[
    ACK [$contact] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    [last_from:]
    [last_to:]
    [last_call-id:]
    CSeq: [$last_cseq] ACK
    Contact: <sip:[$cgpn]@[local_ip]:[local_port]>
    Content-Length: 0
]]>
</send>

<recv request="INVITE">
    <action>
        <assign assign_to="sdp_chk" value="" />
        <ereg regexp="PCMA" search_in="body" check_it="true" assign_to="sdp_chk" />
        <ereg regexp="o=([^ ]+)\s([^ ]+)\s([^ ]+)" check_it="true" search_in="body" assign_to="dummy,dummy,second_ss_id,second_ss_vrs"/>
        <todouble assign_to="second_ss_vrs" variable="second_ss_vrs"/>
        <todouble assign_to="second_ss_id" variable="second_ss_id"/>
    </action>
</recv>

<send retrans="500">
<![CDATA[
    SIP/2.0 200 OK
    [last_Via:]
    [last_From:]
    [last_To:]
    Contact: sip:[$cgpn]@[local_ip]:[local_port]
    [last_Call-ID:]
    [last_CSeq:]
    Max-Forwards: 70
    Content-Type: application/sdp
    Content-Length: [len]
    
    v=0
    o=tester 123456 654323 IN IP[local_ip_type] [local_ip]
    s=A conversation
    c=IN IP[local_ip_type] [local_ip]
    t=0 0
    m=audio [auto_media_port] RTP/AVP 8
    a=rtpmap:8 PCMA/8000/1
    a=sendrecv
]]>
</send>

<recv request="ACK"/>

<nop hide="true">
   <action>
          <exec rtp_stream="[media_path]/test.alaw,-1,8" />
     </action>
</nop>


<pause milliseconds="2000"/>

<send>
<![CDATA[
    BYE [$contact] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    From: "UAC receive re-INVITE" <sip:[$cgpn]@[$cgpn_dom]>;tag=[$local_tag]
    To: "[$cdpn]" <sip:[$cdpn]@[$cdpn_dom]>[peer_tag_param]
    [last_call-id:]
    CSeq: [cseq] BYE
    Max-Forwards: 70
    Content-Length: 0
]]>
</send>

<recv response="200" next="exit" crlf="true"></recv>


<!--
   Отправка INVITE c auth
-->

<label id="send_inv_with_auth"/>

<send>
<![CDATA[
    ACK sip:[$cdpn]@[remote_ip]:[remote_port] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[$last_branch]
    [last_from:]
    [last_to:]
    [last_call-id:]
    [last_CSeq:]    
    Contact: <sip:[$cgpn]@[local_ip]:[local_port]>
    Content-Length: 0
]]>
</send>


<send next="recv_100">
<![CDATA[
    INVITE sip:[$cdpn]@[remote_ip]:[remote_port] SIP/2.0
    Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
    From: "UAC receive re-INVITE (resync media test)" <sip:[$cgpn]@[$cgpn_dom]>;tag=[$local_tag]
    To: <sip:[$cdpn]@[$cdpn_dom]>
    [last_call-id]
    CSeq: [cseq] INVITE
    Contact: <sip:[$cgpn]@[local_ip]:[local_port]>
    [authentication]
    Max-Forwards: 70
    Content-Type: application/sdp
    Content-Length: [len]
    
    v=0
    o=tester 123456 654321 IN IP[local_ip_type] [local_ip]
    s=A conversation
    c=IN IP[local_ip_type] [local_ip]
    t=0 0
    m=audio [auto_media_port] RTP/AVP 8
    a=rtpmap:8 PCMA/8000
]]>
</send>

<label id="exit"/>

<nop hide="true">
    <action>
        <test assign_to="compare_result" variable="second_ss_vrs" compare="greater_than" variable2="first_ss_vrs" />
    </action>
</nop>

<nop hide="true" condexec="compare_result" condexec_inverse="true">
    <action>
        <warning message="First session version ([$first_ss_vrs]) must be greater than second ([$second_ss_vrs])"/>
        <exec int_cmd="stop_now"/>
    </action>
</nop>


<nop hide="true">
    <action>
        <test assign_to="compare_result" variable="second_ss_id" compare="equal" variable2="first_ss_id" />
    </action>
</nop>

<nop hide="true" condexec="compare_result" condexec_inverse="true">
    <action>
        <warning message="First session id ([$first_ss_id]) must be equal second session id ([$second_ss_id])"/>
        <exec int_cmd="stop_now"/>
    </action>
</nop>


<nop hide="true">
    <action>
        <strcmp assign_to="compare_result" variable="180_sdp" variable2="200_sdp" />
    </action>
</nop>

<nop hide="true" condexec="compare_result">
    <action>
        <warning message="SDP in 180 and sdp in 200 are different.\nSDP in 180:\n[$180_sdp]SDP in 200:\n[$200_sdp]"/>
        <exec int_cmd="stop_now"/>
    </action>
</nop>



<!--
    Ждём 2 секунды
-->

<timewait milliseconds="2000"/>

</scenario>
